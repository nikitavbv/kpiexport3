name: Rust

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache deps
        uses: actions/cache@v2
        env:
          cache-name: cache-deps
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Run tests
        run: cd kpiexport && cargo test
      - name: Build
        run: cd kpiexport && cargo build --release
      - name: Release binary
        uses: actions/upload-artifact@v2
        with:
          name: release-binary
          path: kpiexport/target/release/kpiexport
  build_docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_KEY }}
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: release-binary
          path: kpiexport/target/release/kpiexport
      - name: Publish docker image to eu.gcr.io
        uses: docker/build-push-action@v2
        with:
          tags: "eu.gcr.io/nikitavbv/nikitavbv/kpiexport:0.1.${{ github.run_number }}"
          push: true
          context: kpiexport
      - run: echo "Pushed eu.gcr.io/nikitavbv/nikitavbv/kpiexport:0.1.${{ github.run_number }}"
      - uses: hashicorp/setup-terraform@v1
      - name: save gcloud service account key
        run: 'echo "$SERVICE_ACCOUNT_KEY" > ./service_account_key.json'
        shell: bash
        working-directory: infrastructure/terraform/api
        env:
          SERVICE_ACCOUNT_KEY : ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_KEY }}
      - run: terraform init
        working-directory: infrastructure/terraform/api
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./service_account_key.json
      - run: terraform apply -var="service_version=0.1.${{ github.run_number }}" -input=false -auto-approve
        working-directory: infrastructure/terraform/api
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./service_account_key.json
